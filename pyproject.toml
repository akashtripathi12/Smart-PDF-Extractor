[project]
name = "app"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pillow==10.1.0",
    "pymupdf==1.23.26",
    "pytesseract==0.3.10",
]

[dependency-groups]
dev = [
    "poethepoet>=0.36.0",
]

[tool.poe.tasks]
setup = [
    { shell = "echo 'ðŸš€ Setting up Adobe-1A project...'" },
    "install",
    { shell = "echo 'âœ… Setup complete!'" }
]

install = [
    { shell = "uv venv" }, 
    { shell = "uv sync --group dev" }, 
]

start = { shell = "uv run src/main.py" }

# Utility tasks
clean = [
    { shell = "echo 'ðŸ§¹ Cleaning up Python cache files...'" },
    { shell = "find . -type f -name '*.pyc' -delete" },
    { shell = "find . -type d -name '__pycache__' -delete" },
    { shell = "find . -type d -name '*.egg-info' -exec rm -rf {} +" }
]

clean-io = [
    { shell = "echo 'ðŸ§¹ Cleaning up test I/O directories (/sample_dataset/pdfs/*, /sample_dataset/outputs/*)...'" },
    { shell = "rm -rf sample_dataset/pdfs/*" },
    { shell = "rm -rf sample_dataset/outputs/*" }
]

clean-venv = { shell = "rm -rf .venv" }

clean-all = [
    "clean",
    "clean-io",
    "clean-venv"
]

# Docker specific tasksc
build-docker = { shell = "docker build --platform linux/amd64 -t pdf-processor ." }
timed-build-docker = { shell = "time docker build --platform linux/amd64 -t pdf-processor ." }

test-runner = { shell = """
	docker run --rm \
	  --platform linux/amd64 \
	  -v $(pwd)/sample_dataset/pdfs:/app/sample_dataset/pdfs:ro \
	  -v $(pwd)/sample_dataset/outputs:/app/sample_dataset/outputs \
	  --network none \
	  --memory=16g \
	  --cpus=8 \
	  pdf-processor
    """ }

prod-runner = { shell = """
	docker run --rm \
	  --platform linux/amd64 \
	  -v $(pwd)/input:/app/input:ro \
	  -v $(pwd)/output:/app/output \
	  --network none \
	  --memory=16g \
	  --cpus=8 \
	  pdf-processor
    """ }
